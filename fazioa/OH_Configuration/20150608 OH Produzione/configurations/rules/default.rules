import org.openhab.core.library.types.*
import org.openhab.core.persistence.*
import org.openhab.model.script.actions.*

var Number counter = 1
var Timer timer = null

rule "Update max and min Temp Giardino"
when
	Item Temperature_GF_Giardino changed or
	Time cron "0/30 * * * * ?" or
	System started
then	
	postUpdate(Temperature_GF_Giardino_Max, Temperature_GF_Giardino.maximumSince(now.toDateMidnight).state)
	postUpdate(Temperature_GF_Giardino_Min, Temperature_GF_Giardino.minimumSince(now.toDateMidnight).state)
end


rule "Update max and min consumo"
when
	Item Consumo_GF_Soggiorno changed or
	Time cron "0/30 * * * * ?" or
	System started
then	
	postUpdate(Consumo_GF_Soggiorno_Max, Consumo_GF_Soggiorno.maximumSince(now.toDateMidnight).state)
	postUpdate(Consumo_GF_Soggiorno_Min, Consumo_GF_Soggiorno.minimumSince(now.toDateMidnight).state)
end

rule "Update max and min Temp Sogg"
when
	Item Temperature_GF_Soggiorno changed or
	Time cron "0/30 * * * * ?" or
	System started
then	
	postUpdate(Temperature_GF_Soggiorno_Max, Temperature_GF_Soggiorno.maximumSince(now.toDateMidnight).state)
	postUpdate(Temperature_GF_Soggiorno_Min, Temperature_GF_Soggiorno.minimumSince(now.toDateMidnight).state)
end



rule "Periodically check presence"
when
    Time cron "0 * * * * ?"
then
        if (Presence.state == ON)
        {
            logInfo("PresenceCheck", "No phone within reach, checking for flapping")
            if(network.members.filter(s |  s.state == ON ).size == 0) {
                logInfo("PresenceCheck", "Nobody is at home")
                sendCommand(Presence, OFF)
            }
        }
end

rule "Coming home"
when
        Item network changed
then
        if (Presence.state != ON) {
                if(network.members.filter(s | s.state == ON).size > 0) {
                        logInfo("PresenceCheck", "Somebody is home")
                        sendCommand(Presence, ON)
                }
        }
end

rule "Apertura Cancello"
when
	Item SwitchCancello received command ON 
then	
	sendNotification("fazioa@gmail.com", "Ricevuto. Apertura cancello...")
end

rule "Apertura Portoncino"
when
	Item SwitchPortoncino received command ON 
then	
	sendNotification("fazioa@gmail.com", "Ricevuto. Apertura portoncino...")
end